#Kage Library  - color
#$lib_ver$:0.0.4

_k_loaded_color(){
   local null
}

_k_color_help() {
    local help="Library color's  help
Usage) ${FUNCNAME} "
    [  "${FUNCNAME}_${_K_XCODE_HELP}" == "$1" ] && _k_help  && return 0
    echo "Library : color "
}


_k_color(){
    [ -n "$_K_LIB" ] || error_return "_K_LIB not found" || return 1
    local help="Library color's start function
Usage) ${FUNCNAME} "
    [  "${FUNCNAME}_${_K_XCODE_HELP}" == "$1" ] && _k_help  && return 0
    ### start(open) library code here ###
}


#_k_color_close(){
#    local help=" Library color's closing function
#Usage) ${FUNCNAME} "
#    [  "${FUNCNAME}_${_K_XCODE_HELP}" == "$1" ] && _k_help  && return 0
#    ### close library code here ###
#}


#_k_color_example(){
#    local help="help
#Usage) ${FUNCNAME} "
#    [  "${FUNCNAME}_${_K_XCODE_HELP}" == "$1" ] && _k_help  && return 0
#    ### your code here ###
#}

_k_color_type() {
    local color fcolor bcolor
    #color=($(echo $1 | sed "s/:/ /g"))
    color=$1
    if [ "$color" == "black" ]; then
       echo 30
    elif [ "$color" == "red" ]; then
       echo 31
    elif [ "$color" == "green" ]; then
       echo 32
    elif [ "$color" == "yello" ]; then
       echo 33
    elif [ "$color" == "blue" ]; then
       echo 34
    elif [ "$color" == "purple" ]; then
       echo 35
    elif [ "$color" == "cyan" ]; then
       echo 36
    elif [ "$color" == "white" ]; then
       echo 37
    elif [ "$color" == "bred" ]; then
       echo 41
    elif [ "$color" == "bgreen" ]; then
       echo 42
    elif [ "$color" == "byello" ]; then
       echo 43
    elif [ "$color" == "bblue" ]; then
       echo 44
    elif [ "$color" == "bpurple" ]; then
       echo 45
    elif [ "$color" == "bcyan" ]; then
       echo 46
    elif [ "$color" == "bwhite" ]; then
       echo 47
    elif [ "$color" == "bold" ]; then
       echo 1
    elif [ "$color" == "underline" ]; then
       echo 4
    elif [ "$color" == "revers" ]; then
       echo 7
    elif [ "$color" == "none" ]; then
       echo none
    fi
}

_k_color_echo_old() {
    local fcolor bcolor color msg
    color=0
    msg=($*)
    gcolor=${msg[${#msg[*]}-1]}
    if echo $gcolor | grep "^--" >/dev/null; then
        color=($(echo $gcolor|sed "s/^--//g"|sed "s/://g"|sed "s/;//g"))
        [ "$(echo $color | sed "s/^[-+0-9][0-9.]*//g" | wc -c)" == "1" ] || color=$(_k_color_type $color)
    fi
    if [ -n "$color" ]; then
        msg[${#msg[*]}-1]=""
        echo -e "\E[${color}m${msg[*]}\E[00m" ;tput sgr0
    else
        echo "$*"
    fi
}

_k_color_echo() {
    local fcolor bcolor color msg ii jj tmp chk
    color=0
    msg=($*)
    jj=0
    chk=0
    for (( ii=0; ii<${#msg[*]} ; ii++ )); do
         if echo ${msg[$ii]} | grep "^--[a-zA-Z0-9]" >/dev/null; then
             if [ "$jj" == "1" ]; then
                  (( $chk > 0 )) && echo -n " "
                  if [ -n "$color" ]; then
                      if [ "$color" == "none" ]; then
                            tput sgr0; echo -n "$tmp"
                      else
                            echo -en "\E[${color}m${tmp}\E[00m" ;tput sgr0
                      fi
                  else
                      echo -n "${tmp}"
                  fi
                  tmp=""
                  chk=$(($chk+1))
             fi
             jj=0
             color=($(echo ${msg[$ii]}|sed "s/^--//g"|sed "s/://g"|sed "s/;//g"))
             [ "$(echo $color | sed "s/^[-+0-9][0-9.]*//g" | wc -c)" == "1" ] || color=$(_k_color_type $color)
         else
             [ -n "$tmp" ] && tmp="$tmp ${msg[$ii]}" || tmp="${msg[$ii]}"
             jj=1
         fi
    done
    if [ -n "$color" ]; then
        if [ "$jj" == "1" ]; then
           (( $chk > 0 )) && echo -n " "
           if [ "$color" == "none" ]; then
                 tput sgr0; echo -n "$tmp"
           else
                 echo -en "\E[${color}m${tmp}\E[00m" ;tput sgr0
           fi
        fi
    else
        echo -n "$*"
    fi
    echo
}

kecho() {
    _k_color_echo $*
}

# example
#kecho --red red abc  --green green kkkk --none kdkshek --underline underline --none [ --green ok --none ]
